pipeline{
    agent any
     tools{
         maven 'maven'
         jdk 'jdk'
}
      
        stages{
            stage('Git-Checkout')
            {
              steps{
                  script{
                        FAILED_STAGE=env.STAGE_NAME
                    sh 'rm -rf Java'
                     git 'https://github.com/sreelakshmi665/Java.git'
                }
            }
            }
             stage('Validate')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
              sh 'mvn -f Java  clean validate'
                }
            }
        }
        stage('Compile')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
               sh 'mvn -f Java compile'
                }
            }
        }
            stage('sonar analysis'){
            steps{
                 script{
                        FAILED_STAGE=env.STAGE_NAME    
                withSonarQubeEnv('sonar-server'){
                    
                        sh 'mvn -f Java sonar:sonar'
                    
                    }
                }
            }
            }
        
             stage("Quality gate") {
            steps {
                script{
                        FAILED_STAGE=env.STAGE_NAME
                waitForQualityGate abortPipeline: true
                }
            }
        }
            
        stage('Test')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
                sh 'mvn -f Java test'
                }
            }
        }
        stage('Package')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
               sh 'mvn -f Java package'
                }
            }
        }
        stage('Verify')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
               sh 'mvn -f Java verify'
                }
            }
        }
        stage('Install')
        {
            steps{
                script{
                        FAILED_STAGE=env.STAGE_NAME
                sh 'mvn -f Java install'
                }
            }
        }
      stage('Artifactory')
    {
      steps{
           script{
                        FAILED_STAGE=env.STAGE_NAME
                        
        archiveArtifacts artifacts:'Java/target/*.jar',followSymlinks:false
           }
      }
      }
        
    stage('Deploy-To-Artifactory')
    {
      steps{
           script{
                        FAILED_STAGE=env.STAGE_NAME
                       
        rtUpload(
          serverId:'artifactory-server',
          spec: '''{
          "files": [
            {
              "pattern": "Java/target/*.jar",
              "target": "art-doc-dev-loc"
            }
         ]
    }''',
          
)
  }
}   
    } 

}          
     post {  
         always {  
             echo 'This will always run'  
         }  
         success {  
             echo 'This will run only if successful'
              mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> Success!! <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'sreelakshmilucky14@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "sreelakshmilucky14@gmail.com"; 
             sshagent(['058a56c8-b95f-435b-b514-25ef3beddbdd']){
                  sh "ssh -o StrictHostKeyChecking=no ubuntu@13.233.49.82 'echo $HOME'"
                    sh 'scp -r /var/jenkins_home/workspace/SpringJava/Java/target/Java-0.0.1-SNAPSHOT.jar ubuntu@13.233.49.82:/home/ubuntu/artifacts'     
        }
         }  
         failure {  
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER}<br> Failure!! <br> <br>Build Failed Stage: ${FAILED_STAGE} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'sreelakshmilucky14@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "sreelakshmilucky14@gmail.com";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline haschanged'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }    
}
